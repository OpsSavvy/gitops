apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: loibis.com
  namespace: argocd
  labels:
    configmap-replicator: true
spec:
  project: default
  sources:
    - repoURL: 'https://github.com/OpsSavvy/loibiscom'
      targetRevision: main
      path: .
    - repoURL: 'https://github.com/OpsSavvy/configmap.git'
      targetRevision: main
      path: .
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: loibiscom
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: sealedsecret-controller
  namespace: argocd
spec:
  project: default
  source:
    repoURL: 'https://github.com/OpsSavvy/k3stools'
    targetRevision: main
    path: sealedsecret-controller
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: kube-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: grafana
  namespace: argocd
spec:
  project: default
  source:
    repoURL: 'https://github.com/OpsSavvy/k3stools'
    targetRevision: main
    path: grafana
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ingress-nginx
  namespace: argocd
spec:
  project: default
  source:
    repoURL: 'https://github.com/OpsSavvy/k3stools'
    targetRevision: main
    path: ingress-nginx
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: ingress-nginx
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: minecraft
  namespace: argocd
spec:
  project: default
  source:
    repoURL: 'https://github.com/OpsSavvy/minecraft'
    targetRevision: main
    path: .
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: minecraft
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: eck-operator
  namespace: argocd
spec:
  project: default
  source:
    repoURL: 'https://github.com/OpsSavvy/k3stools'
    targetRevision: main
    path: eck-operator
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: eck
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: eck-elasticsearch
  namespace: argocd
spec:
  project: default
  source:
    repoURL: 'https://github.com/OpsSavvy/k3stools'
    targetRevision: main
    path: eck-elasticsearch
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: eck
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: eck-kibana
  namespace: argocd
spec:
  project: default
  source:
    repoURL: 'https://github.com/OpsSavvy/k3stools'
    targetRevision: main
    path: eck-kibana
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: eck
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kubernetes-replicator
  namespace: argocd
spec:
  project: default
  source:
    repoURL: 'https://github.com/OpsSavvy/k3stools'
    targetRevision: main
    path: kubernetes-replicator
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: kube-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: true